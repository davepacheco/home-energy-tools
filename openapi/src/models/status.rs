/*
 * The Enlighten Systems API
 *
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Status : The current status of the system. * `comm` - One or more Envoys on the system are not communicating to Enlighten. * `power` - There is a production issue on the system. * `meter` - There is a communication problem between an Envoy and a revenue-grade meter on the system. * `meter_issue` - One or more meters on the system are reporting unusual measurements. * `micro` - There is a communication problem between an Envoy and microinverters that it monitors. * `battery` - There is a communication problem between an Envoy and an AC battery on the system. * `storage_idle` - An AC battery on the system has not changed its state of charge for more than 72 hours. * `normal` - The system is operating normally.

/// The current status of the system. * `comm` - One or more Envoys on the system are not communicating to Enlighten. * `power` - There is a production issue on the system. * `meter` - There is a communication problem between an Envoy and a revenue-grade meter on the system. * `meter_issue` - One or more meters on the system are reporting unusual measurements. * `micro` - There is a communication problem between an Envoy and microinverters that it monitors. * `battery` - There is a communication problem between an Envoy and an AC battery on the system. * `storage_idle` - An AC battery on the system has not changed its state of charge for more than 72 hours. * `normal` - The system is operating normally.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "comm")]
    Comm,
    #[serde(rename = "power")]
    Power,
    #[serde(rename = "meter")]
    Meter,
    #[serde(rename = "meter_issue")]
    MeterIssue,
    #[serde(rename = "micro")]
    Micro,
    #[serde(rename = "battery")]
    Battery,
    #[serde(rename = "storage_idle")]
    StorageIdle,
    #[serde(rename = "normal")]
    Normal,

}

impl ToString for Status {
    fn to_string(&self) -> String {
        match self {
            Self::Comm => String::from("comm"),
            Self::Power => String::from("power"),
            Self::Meter => String::from("meter"),
            Self::MeterIssue => String::from("meter_issue"),
            Self::Micro => String::from("micro"),
            Self::Battery => String::from("battery"),
            Self::StorageIdle => String::from("storage_idle"),
            Self::Normal => String::from("normal"),
        }
    }
}




