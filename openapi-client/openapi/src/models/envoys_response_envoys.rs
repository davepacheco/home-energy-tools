/*
 * The Enlighten Systems API
 *
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct EnvoysResponseEnvoys {
    /// The Enlighten ID of the Envoy.
    #[serde(rename = "envoy_id")]
    pub envoy_id: i32,
    /// The last time this Envoy submitted a report, by default expressed in Unix epoch time. When the `datetime_format` query parameter is `iso8601`, `last_report_at` is in ISO 8601 format. If Enlighten has no record of a report from this Envoy, returns null.
    #[serde(rename = "last_report_at")]
    pub last_report_at: i64,
    /// The human-friendly name of this Envoy.
    #[serde(rename = "name")]
    pub name: String,
    /// The Enphase part number of this Envoy.
    #[serde(rename = "part_number")]
    pub part_number: String,
    /// The serial number of this Envoy.
    #[serde(rename = "serial_number")]
    pub serial_number: String,
    /// The current status of this Envoy. * `normal` - The Envoy is operating normally. * `comm` - The Envoy is not communicating to Enlighten.
    #[serde(rename = "status")]
    pub status: Status,
}

impl EnvoysResponseEnvoys {
    pub fn new(envoy_id: i32, last_report_at: i64, name: String, part_number: String, serial_number: String, status: Status) -> EnvoysResponseEnvoys {
        EnvoysResponseEnvoys {
            envoy_id,
            last_report_at,
            name,
            part_number,
            serial_number,
            status,
        }
    }
}

/// The current status of this Envoy. * `normal` - The Envoy is operating normally. * `comm` - The Envoy is not communicating to Enlighten.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "normal")]
    Normal,
    #[serde(rename = "comm")]
    Comm,
}

