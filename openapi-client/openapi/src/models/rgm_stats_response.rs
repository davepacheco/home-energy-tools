/*
 * The Enlighten Systems API
 *
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct RgmStatsResponse {
    /// Enlighten ID for this system.
    #[serde(rename = "system_id")]
    pub system_id: i32,
    /// Number of active revenue-grade meters for this system.
    #[serde(rename = "total_devices")]
    pub total_devices: i32,
    #[serde(rename = "meta")]
    pub meta: Box<crate::models::Meta>,
    /// A list of intervals between the requested start and end times.
    #[serde(rename = "intervals")]
    pub intervals: Vec<crate::models::RgmStatsResponseIntervals>,
    /// A list of intervals of a meter between the requested start and end times.
    #[serde(rename = "meter_intervals")]
    pub meter_intervals: Vec<crate::models::RgmStatsResponseMeterIntervals>,
}

impl RgmStatsResponse {
    pub fn new(system_id: i32, total_devices: i32, meta: crate::models::Meta, intervals: Vec<crate::models::RgmStatsResponseIntervals>, meter_intervals: Vec<crate::models::RgmStatsResponseMeterIntervals>) -> RgmStatsResponse {
        RgmStatsResponse {
            system_id,
            total_devices,
            meta: Box::new(meta),
            intervals,
            meter_intervals,
        }
    }
}


