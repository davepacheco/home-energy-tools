/*
 * The Enlighten Systems API
 *
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct InventoryResponse {
    /// Enlighten ID for this system.
    #[serde(rename = "system_id")]
    pub system_id: i32,
    /// A list of Envoys on this system, including serial number.
    #[serde(rename = "envoys", skip_serializing_if = "Option::is_none")]
    pub envoys: Option<Vec<crate::models::InventoryResponseEnvoys>>,
    /// A list of inverters on this system, including serial and model numbers.
    #[serde(rename = "inverters")]
    pub inverters: Vec<crate::models::InventoryResponseEnvoys>,
    /// A list of meters on this system, including serial number, manufacturer, and model number.
    #[serde(rename = "meters")]
    pub meters: Vec<crate::models::InventoryResponseMeters>,
    #[serde(rename = "meta")]
    pub meta: Box<crate::models::Meta>,
}

impl InventoryResponse {
    pub fn new(system_id: i32, inverters: Vec<crate::models::InventoryResponseEnvoys>, meters: Vec<crate::models::InventoryResponseMeters>, meta: crate::models::Meta) -> InventoryResponse {
        InventoryResponse {
            system_id,
            envoys: None,
            inverters,
            meters,
            meta: Box::new(meta),
        }
    }
}


